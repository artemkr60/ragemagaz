var u=Object.defineProperty,a=(t,e,r)=>e in t?u(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,i=(t,e,r)=>a(t,typeof e!="symbol"?e+"":e,r);const s=class n{constructor(e){i(this,"id"),this.id=e}static get ZERO(){return this.nextIdValue=0,new n(0)}static nextId(){return++this.nextIdValue}static nextCId(){return new n(this.nextIdValue++)}toNumber(){return this.id}};i(s,"nextIdValue",0);let d=s;export{d as ContinuousId};
