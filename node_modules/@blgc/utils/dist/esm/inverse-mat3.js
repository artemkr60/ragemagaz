function i(r){const u=l(r);if(u===0)return null;const f=s(r),c=M(f),o=[[0,0,0],[0,0,0],[0,0,0]];for(let t=0;t<3;t++)for(let e=0;e<3;e++)o[t][e]=c[t][e]/u;return o}function l(r){return r[0][0]*(r[1][1]*r[2][2]-r[1][2]*r[2][1])-r[0][1]*(r[1][0]*r[2][2]-r[1][2]*r[2][0])+r[0][2]*(r[1][0]*r[2][1]-r[1][1]*r[2][0])}function s(r){return[[r[1][1]*r[2][2]-r[1][2]*r[2][1],-(r[1][0]*r[2][2]-r[1][2]*r[2][0]),r[1][0]*r[2][1]-r[1][1]*r[2][0]],[-(r[0][1]*r[2][2]-r[0][2]*r[2][1]),r[0][0]*r[2][2]-r[0][2]*r[2][0],-(r[0][0]*r[2][1]-r[0][1]*r[2][0])],[r[0][1]*r[1][2]-r[0][2]*r[1][1],-(r[0][0]*r[1][2]-r[0][2]*r[1][0]),r[0][0]*r[1][1]-r[0][1]*r[1][0]]]}function M(r){return[[r[0][0],r[1][0],r[2][0]],[r[0][1],r[1][1],r[2][1]],[r[0][2],r[1][2],r[2][2]]]}export{i as inverseMat3};
