"use strict";var u=require("./PluginCallback.js"),g=Object.defineProperty,h=(t,e,r)=>e in t?g(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,p=(t,e,r)=>h(t,e+"",r),v=(t,e,r)=>new Promise((a,i)=>{var c=l=>{try{s(r.next(l))}catch(n){i(n)}},o=l=>{try{s(r.throw(l))}catch(n){i(n)}},s=l=>l.done?a(l.value):Promise.resolve(l.value).then(c,o);s((r=r.apply(t,e)).next())});class b{constructor(e,r={}){p(this,"figma");const{events:a=[]}=r;this.figma=e,this.register(a)}register(e){const r=Array.isArray(e)?e.map(a=>new u.PluginCallback(a)):[new u.PluginCallback(e)];return this.registerCallbacks(r)}post(e,r){this.figma.ui.postMessage({key:e,args:r})}registerCallbacks(e){return e.map(r=>this.registerCallback(r))}registerCallback(e){let r=e.type,a=null;const i=r.split(".");i.length===2&&(a=i[0],r=i[1]);const c=a==="app"?this.figma.ui:this.figma,o=e.once?"once":"on",s=(...l)=>{this.onEvent(e,l).catch(n=>{console.error("An error occurred while handling plugin callback",n)})};return c[o](r,s),()=>{c.off(r,s)}}onEvent(e,r){return v(this,null,function*(){if(e.type==="app.message"){const a=r[0];(a==null?void 0:a.key)===e.key&&typeof(a==null?void 0:a.args)=="object"&&(yield e.callback(this,a.args))}else yield e.callback(this,...r)})}}exports.FigmaPluginHandler=b;
