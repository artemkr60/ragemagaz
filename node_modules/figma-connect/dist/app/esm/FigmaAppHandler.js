import{AppCallback as u}from"./AppCallback.js";var g=Object.defineProperty,v=Object.getOwnPropertySymbols,y=Object.prototype.hasOwnProperty,h=Object.prototype.propertyIsEnumerable,p=(t,r,e)=>r in t?g(t,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[r]=e,d=(t,r)=>{for(var e in r||(r={}))y.call(r,e)&&p(t,e,r[e]);if(v)for(var e of v(r))h.call(r,e)&&p(t,e,r[e]);return t},b=(t,r,e)=>p(t,r+"",e),m=(t,r,e)=>new Promise((a,l)=>{var n=s=>{try{i(e.next(s))}catch(c){l(c)}},o=s=>{try{i(e.throw(s))}catch(c){l(c)}},i=s=>s.done?a(s.value):Promise.resolve(s.value).then(n,o);i((e=e.apply(t,r)).next())});class k{constructor(r,e={}){b(this,"parent");const{events:a=[]}=e;this.parent=r,this.register(a)}register(r){const e=Array.isArray(r)?r.map(a=>new u(a)):[new u(r)];return this.registerCallbacks(e)}post(r,e){this.parent.postMessage({pluginMessage:{key:r,args:e}},"*")}registerCallbacks(r){return r.map(e=>this.registerCallback(e))}registerCallback(r){let e=r.type;const a=e.split(".");a.length===2&&(e=a[1]);const l=(...n)=>{r.shouldCall()?this.onEvent(r,n).catch(o=>{console.error("An error occurred while handling app callback",o)}):removeEventListener(e,l)};return addEventListener(e,l),()=>{removeEventListener(e,l)}}onEvent(r,e){return m(this,null,function*(){var a;if(r.type==="plugin.message"){const l=(a=e[0])==null?void 0:a.data,n=l==null?void 0:l.pluginMessage;n!=null&&(n==null?void 0:n.key)===r.key&&typeof(n==null?void 0:n.args)=="object"&&(yield r.callback(this,d({pluginId:l==null?void 0:l.pluginId},n.args)))}else yield r.callback(this,...e)})}}export{k as FigmaAppHandler};
