"use strict";var u=require("./AppCallback.js"),g=Object.defineProperty,v=Object.getOwnPropertySymbols,y=Object.prototype.hasOwnProperty,b=Object.prototype.propertyIsEnumerable,p=(t,e,r)=>e in t?g(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,d=(t,e)=>{for(var r in e||(e={}))y.call(e,r)&&p(t,r,e[r]);if(v)for(var r of v(e))b.call(e,r)&&p(t,r,e[r]);return t},h=(t,e,r)=>p(t,e+"",r),k=(t,e,r)=>new Promise((a,l)=>{var n=s=>{try{o(r.next(s))}catch(c){l(c)}},i=s=>{try{o(r.throw(s))}catch(c){l(c)}},o=s=>s.done?a(s.value):Promise.resolve(s.value).then(n,i);o((r=r.apply(t,e)).next())});class m{constructor(e,r={}){h(this,"parent");const{events:a=[]}=r;this.parent=e,this.register(a)}register(e){const r=Array.isArray(e)?e.map(a=>new u.AppCallback(a)):[new u.AppCallback(e)];return this.registerCallbacks(r)}post(e,r){this.parent.postMessage({pluginMessage:{key:e,args:r}},"*")}registerCallbacks(e){return e.map(r=>this.registerCallback(r))}registerCallback(e){let r=e.type;const a=r.split(".");a.length===2&&(r=a[1]);const l=(...n)=>{e.shouldCall()?this.onEvent(e,n).catch(i=>{console.error("An error occurred while handling app callback",i)}):removeEventListener(r,l)};return addEventListener(r,l),()=>{removeEventListener(r,l)}}onEvent(e,r){return k(this,null,function*(){var a;if(e.type==="plugin.message"){const l=(a=r[0])==null?void 0:a.data,n=l==null?void 0:l.pluginMessage;n!=null&&(n==null?void 0:n.key)===e.key&&typeof(n==null?void 0:n.args)=="object"&&(yield e.callback(this,d({pluginId:l==null?void 0:l.pluginId},n.args)))}else yield e.callback(this,...r)})}}exports.FigmaAppHandler=m;
